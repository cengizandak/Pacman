package view.Render;



import controller.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

//Firstly this is the panel and we initiliaze the board here.dodrawing() contains different cases with respect to the flags.
//Flags are about the game states, timer is working every 40msec and running the paintComponent(g) which is a common function of the ActionListener.
//

public class BoardInit extends JPanel implements ActionListener {
    private Game game;
    private Timer timer = new Timer(50, this);

    public BoardInit(Game game) {
        initBoard(game);
    }

    private void initBoard(Game game) {
        setFocusable(true);
        setBackground(Color.black);
        setDoubleBuffered(true);
        this.game = game;
        timer.start();
    }


    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        doDrawing(g);
    }

    /*
     * This method would run every 40ms(depends on timer).
     * */
    private void doDrawing(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
      
        StateHandler stateHandler = new StateHandler();
        GameState state;
        if (game.getData().getData_state().toString().equals("SELECTION")) {
            addKeyListener(SelectionAdapter);
            state = (SelectionState)stateHandler.changeState(game, "SELECTION");
            state.showDisplay(g2d, game);
        } else if (game.getData().getData_state().toString().equals("PLAY")) {
            removeKeyListener(SelectionAdapter);
            state= (PlayState) stateHandler.changeState( game, "PLAY");
            state.showDisplay(g2d, game);
        }
        Toolkit.getDefaultToolkit().sync();
        g2d.dispose();
    }

    /*
     * This method is automatically generated by the actionlistener
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        repaint();
    }

    KeyAdapter SelectionAdapter = new KeyAdapter() {
        @Override
        public void keyPressed(KeyEvent e) {
            super.keyPressed(e);
            int key = e.getKeyCode();
            InputHandler handler = new InputHandler();
            System.out.println((char)key);
            handler.SelectBoard(key, game);
            StateHandler stateHandler = new StateHandler();
            stateHandler.changeState(game, "PLAY");
        }
    };


}


