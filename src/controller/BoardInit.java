package controller;

import model.SmallBoard;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

//Firstly this is the panel and we initiliaze the board here.dodrawing() contains different cases with respect to the flags.
//Flags are about the game states, timer is working every 40msec and running the paintComponent(g) which is a common function of the ActionListener.
//

public class BoardInit extends JPanel implements ActionListener {
    private static String Flag = "SELECTION";
    private Timer timer = new Timer(40, this);

    public static void setFlag(String flag) {
        Flag = flag;
    }


    public BoardInit() {
        initBoard();

    }

    private void initBoard() {
        setFocusable(true);
        setBackground(Color.black);
        setDoubleBuffered(true);
        timer.start();
    }


    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        doDrawing(g);
    }

    private void doDrawing(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        if (Flag == "SELECTION") {
            GameContext context = new GameContext();
            SelectionState selectionState = new SelectionState();
            context.setGs(selectionState);
            context.doAction(g2d);
            addKeyListener(selectionState.SelectionAdapter());
        } else if (Flag == "PLAY") {
            // BoardFactory

            // This is not finished, drawing line or image for showing the walls.
            System.out.println("dssdsdsdsd");
            BoardFactory boardFactory = BoardFactory.getBoardFactory();
            SmallBoard smallBoard = (SmallBoard) boardFactory.createBoard("small");
            char[][] smallBoardStructure = smallBoard.getStructure();
            g2d.setColor(Color.yellow);
            g2d.setStroke(new BasicStroke(1));
            for (int i = 0; i < smallBoardStructure[0].length; i++) {
                for (int j = 0; j < smallBoardStructure.length; j++) {
                    if (smallBoardStructure[i][j] == '1') {

                    }
                }

            }


        }
        Toolkit.getDefaultToolkit().sync();
        g2d.dispose();
    }

//this method is automatically generated by the actionlistener
    @Override
    public void actionPerformed(ActionEvent e) {
        repaint();
    }
}
